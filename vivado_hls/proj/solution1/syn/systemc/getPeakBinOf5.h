// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _getPeakBinOf5_HH_
#define _getPeakBinOf5_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct getPeakBinOf5 : public sc_module {
    // Port declarations 10
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<16> > et_0_read;
    sc_in< sc_lv<16> > et_1_read;
    sc_in< sc_lv<16> > et_2_read;
    sc_in< sc_lv<16> > et_3_read;
    sc_in< sc_lv<16> > et_4_read;
    sc_in< sc_lv<16> > etSum;
    sc_out< sc_lv<3> > ap_return;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    getPeakBinOf5(sc_module_name name);
    SC_HAS_PROCESS(getPeakBinOf5);

    ~getPeakBinOf5();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<16> > etSum_read_reg_337;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<16> > iEtSum_fu_220_p2;
    sc_signal< sc_lv<16> > iEtSum_reg_345;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<15> > tmp_9_fu_86_p4;
    sc_signal< sc_lv<15> > tmp_s_fu_100_p4;
    sc_signal< sc_lv<15> > tmp_1_fu_114_p4;
    sc_signal< sc_lv<15> > tmp_3_fu_134_p4;
    sc_signal< sc_lv<14> > tmp_18_fu_148_p1;
    sc_signal< sc_lv<14> > tmp_19_fu_152_p1;
    sc_signal< sc_lv<14> > tmp5_fu_156_p2;
    sc_signal< sc_lv<15> > tmp_4_fu_170_p4;
    sc_signal< sc_lv<16> > tmp_2_fu_96_p1;
    sc_signal< sc_lv<16> > tmp_fu_128_p2;
    sc_signal< sc_lv<16> > tmp_16_fu_124_p1;
    sc_signal< sc_lv<16> > tmp_5_fu_110_p1;
    sc_signal< sc_lv<16> > tmp2_fu_190_p2;
    sc_signal< sc_lv<16> > tmp8_fu_184_p2;
    sc_signal< sc_lv<16> > tmp9_fu_196_p2;
    sc_signal< sc_lv<16> > tmp_8_fu_202_p2;
    sc_signal< sc_lv<16> > tmp_17_fu_144_p1;
    sc_signal< sc_lv<16> > tmp1_fu_162_p3;
    sc_signal< sc_lv<16> > tmp_20_fu_180_p1;
    sc_signal< sc_lv<16> > tmp_6_fu_208_p2;
    sc_signal< sc_lv<16> > tmp3_fu_214_p2;
    sc_signal< sc_lv<17> > tmp_10_fu_239_p3;
    sc_signal< sc_lv<17> > tmp_13_cast_fu_233_p1;
    sc_signal< sc_lv<18> > tmp_14_cast1_fu_236_p1;
    sc_signal< sc_lv<18> > tmp_15_cast_fu_246_p1;
    sc_signal< sc_lv<18> > tmp_13_cast1_fu_230_p1;
    sc_signal< sc_lv<18> > tmp_12_fu_256_p2;
    sc_signal< sc_lv<18> > tmp_14_fu_268_p3;
    sc_signal< sc_lv<1> > tmp_15_fu_275_p2;
    sc_signal< sc_lv<1> > tmp_11_fu_250_p2;
    sc_signal< sc_lv<1> > tmp_13_fu_262_p2;
    sc_signal< sc_lv<1> > tmp4_fu_289_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_226_p2;
    sc_signal< sc_lv<1> > sel_tmp1_fu_295_p2;
    sc_signal< sc_lv<3> > iAve_fu_281_p3;
    sc_signal< sc_lv<3> > sel_tmp2_fu_301_p3;
    sc_signal< sc_lv<1> > sel_tmp5_fu_317_p2;
    sc_signal< sc_lv<1> > sel_tmp6_fu_323_p2;
    sc_signal< sc_lv<3> > sel_tmp4_fu_309_p3;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_return();
    void thread_iAve_fu_281_p3();
    void thread_iEtSum_fu_220_p2();
    void thread_sel_tmp1_fu_295_p2();
    void thread_sel_tmp2_fu_301_p3();
    void thread_sel_tmp4_fu_309_p3();
    void thread_sel_tmp5_fu_317_p2();
    void thread_sel_tmp6_fu_323_p2();
    void thread_tmp1_fu_162_p3();
    void thread_tmp2_fu_190_p2();
    void thread_tmp3_fu_214_p2();
    void thread_tmp4_fu_289_p2();
    void thread_tmp5_fu_156_p2();
    void thread_tmp8_fu_184_p2();
    void thread_tmp9_fu_196_p2();
    void thread_tmp_10_fu_239_p3();
    void thread_tmp_11_fu_250_p2();
    void thread_tmp_12_fu_256_p2();
    void thread_tmp_13_cast1_fu_230_p1();
    void thread_tmp_13_cast_fu_233_p1();
    void thread_tmp_13_fu_262_p2();
    void thread_tmp_14_cast1_fu_236_p1();
    void thread_tmp_14_fu_268_p3();
    void thread_tmp_15_cast_fu_246_p1();
    void thread_tmp_15_fu_275_p2();
    void thread_tmp_16_fu_124_p1();
    void thread_tmp_17_fu_144_p1();
    void thread_tmp_18_fu_148_p1();
    void thread_tmp_19_fu_152_p1();
    void thread_tmp_1_fu_114_p4();
    void thread_tmp_20_fu_180_p1();
    void thread_tmp_2_fu_96_p1();
    void thread_tmp_3_fu_134_p4();
    void thread_tmp_4_fu_170_p4();
    void thread_tmp_5_fu_110_p1();
    void thread_tmp_6_fu_208_p2();
    void thread_tmp_7_fu_226_p2();
    void thread_tmp_8_fu_202_p2();
    void thread_tmp_9_fu_86_p4();
    void thread_tmp_fu_128_p2();
    void thread_tmp_s_fu_100_p4();
};

}

using namespace ap_rtl;

#endif
