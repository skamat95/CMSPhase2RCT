// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module getPeakBinOf5 (
        ap_clk,
        ap_rst,
        et_0_read,
        et_1_read,
        et_2_read,
        et_3_read,
        et_4_read,
        etSum,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [15:0] et_0_read;
input  [15:0] et_1_read;
input  [15:0] et_2_read;
input  [15:0] et_3_read;
input  [15:0] et_4_read;
input  [15:0] etSum;
output  [2:0] ap_return;
input   ap_ce;

reg   [15:0] etSum_read_reg_337;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [15:0] iEtSum_fu_220_p2;
reg   [15:0] iEtSum_reg_345;
wire    ap_block_pp0_stage0;
wire   [14:0] tmp_9_fu_86_p4;
wire   [14:0] tmp_s_fu_100_p4;
wire   [14:0] tmp_1_fu_114_p4;
wire   [14:0] tmp_3_fu_134_p4;
wire   [13:0] tmp_18_fu_148_p1;
wire   [13:0] tmp_19_fu_152_p1;
wire   [13:0] tmp5_fu_156_p2;
wire   [14:0] tmp_4_fu_170_p4;
wire   [15:0] tmp_2_fu_96_p1;
wire   [15:0] tmp_fu_128_p2;
wire   [15:0] tmp_16_fu_124_p1;
wire   [15:0] tmp_5_fu_110_p1;
wire   [15:0] tmp2_fu_190_p2;
wire   [15:0] tmp8_fu_184_p2;
wire   [15:0] tmp9_fu_196_p2;
wire   [15:0] tmp_8_fu_202_p2;
wire   [15:0] tmp_17_fu_144_p1;
wire   [15:0] tmp1_fu_162_p3;
wire   [15:0] tmp_20_fu_180_p1;
wire   [15:0] tmp_6_fu_208_p2;
wire   [15:0] tmp3_fu_214_p2;
wire   [16:0] tmp_10_fu_239_p3;
wire   [16:0] tmp_13_cast_fu_233_p1;
wire   [17:0] tmp_14_cast1_fu_236_p1;
wire   [17:0] tmp_15_cast_fu_246_p1;
wire   [17:0] tmp_13_cast1_fu_230_p1;
wire   [17:0] tmp_12_fu_256_p2;
wire   [17:0] tmp_14_fu_268_p3;
wire   [0:0] tmp_15_fu_275_p2;
wire   [0:0] tmp_11_fu_250_p2;
wire   [0:0] tmp_13_fu_262_p2;
wire   [0:0] tmp4_fu_289_p2;
wire   [0:0] tmp_7_fu_226_p2;
wire   [0:0] sel_tmp1_fu_295_p2;
wire   [2:0] iAve_fu_281_p3;
wire   [2:0] sel_tmp2_fu_301_p3;
wire   [0:0] sel_tmp5_fu_317_p2;
wire   [0:0] sel_tmp6_fu_323_p2;
wire   [2:0] sel_tmp4_fu_309_p3;

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        etSum_read_reg_337 <= etSum;
        iEtSum_reg_345 <= iEtSum_fu_220_p2;
    end
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_return = ((sel_tmp6_fu_323_p2[0:0] === 1'b1) ? 3'd1 : sel_tmp4_fu_309_p3);

assign iAve_fu_281_p3 = ((tmp_15_fu_275_p2[0:0] === 1'b1) ? 3'd4 : 3'd3);

assign iEtSum_fu_220_p2 = (tmp_6_fu_208_p2 + tmp3_fu_214_p2);

assign sel_tmp1_fu_295_p2 = (tmp_7_fu_226_p2 & tmp4_fu_289_p2);

assign sel_tmp2_fu_301_p3 = ((sel_tmp1_fu_295_p2[0:0] === 1'b1) ? iAve_fu_281_p3 : 3'd2);

assign sel_tmp4_fu_309_p3 = ((tmp_7_fu_226_p2[0:0] === 1'b1) ? sel_tmp2_fu_301_p3 : 3'd0);

assign sel_tmp5_fu_317_p2 = (tmp_11_fu_250_p2 ^ 1'd1);

assign sel_tmp6_fu_323_p2 = (tmp_7_fu_226_p2 & sel_tmp5_fu_317_p2);

assign tmp1_fu_162_p3 = {{tmp5_fu_156_p2}, {2'd0}};

assign tmp2_fu_190_p2 = (tmp_fu_128_p2 + tmp_16_fu_124_p1);

assign tmp3_fu_214_p2 = (tmp1_fu_162_p3 + tmp_20_fu_180_p1);

assign tmp4_fu_289_p2 = (tmp_13_fu_262_p2 & tmp_11_fu_250_p2);

assign tmp5_fu_156_p2 = (tmp_18_fu_148_p1 + tmp_19_fu_152_p1);

assign tmp8_fu_184_p2 = (tmp_2_fu_96_p1 + et_1_read);

assign tmp9_fu_196_p2 = (tmp_5_fu_110_p1 + tmp2_fu_190_p2);

assign tmp_10_fu_239_p3 = {{etSum_read_reg_337}, {1'd0}};

assign tmp_11_fu_250_p2 = ((tmp_13_cast_fu_233_p1 > tmp_10_fu_239_p3) ? 1'b1 : 1'b0);

assign tmp_12_fu_256_p2 = (tmp_14_cast1_fu_236_p1 + tmp_15_cast_fu_246_p1);

assign tmp_13_cast1_fu_230_p1 = iEtSum_reg_345;

assign tmp_13_cast_fu_233_p1 = iEtSum_reg_345;

assign tmp_13_fu_262_p2 = ((tmp_13_cast1_fu_230_p1 > tmp_12_fu_256_p2) ? 1'b1 : 1'b0);

assign tmp_14_cast1_fu_236_p1 = etSum_read_reg_337;

assign tmp_14_fu_268_p3 = {{etSum_read_reg_337}, {2'd0}};

assign tmp_15_cast_fu_246_p1 = tmp_10_fu_239_p3;

assign tmp_15_fu_275_p2 = ((tmp_13_cast1_fu_230_p1 > tmp_14_fu_268_p3) ? 1'b1 : 1'b0);

assign tmp_16_fu_124_p1 = tmp_1_fu_114_p4;

assign tmp_17_fu_144_p1 = tmp_3_fu_134_p4;

assign tmp_18_fu_148_p1 = et_4_read[13:0];

assign tmp_19_fu_152_p1 = et_3_read[13:0];

assign tmp_1_fu_114_p4 = {{et_2_read[15:1]}};

assign tmp_20_fu_180_p1 = tmp_4_fu_170_p4;

assign tmp_2_fu_96_p1 = tmp_9_fu_86_p4;

assign tmp_3_fu_134_p4 = {{et_3_read[15:1]}};

assign tmp_4_fu_170_p4 = {{et_4_read[15:1]}};

assign tmp_5_fu_110_p1 = tmp_s_fu_100_p4;

assign tmp_6_fu_208_p2 = (tmp_8_fu_202_p2 - tmp_17_fu_144_p1);

assign tmp_7_fu_226_p2 = ((iEtSum_reg_345 > etSum_read_reg_337) ? 1'b1 : 1'b0);

assign tmp_8_fu_202_p2 = (tmp8_fu_184_p2 + tmp9_fu_196_p2);

assign tmp_9_fu_86_p4 = {{et_0_read[15:1]}};

assign tmp_fu_128_p2 = et_2_read << 16'd1;

assign tmp_s_fu_100_p4 = {{et_1_read[15:1]}};

endmodule //getPeakBinOf5
